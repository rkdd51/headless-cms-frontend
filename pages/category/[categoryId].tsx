import React from "react";
import Head from "next/head";
import Tabs from "@/components/Tabs";
import { GetStaticProps } from "next";
import { AxiosResponse } from "axios";
import { ICategory, ICollectionResponse, IPagination } from "@/types";
import { fetchCategories } from "@/http";

interface IPropsTypes {
  categories: {
    items: ICategory[];
    pagination: IPagination;
  };
}
const Category = ({ categories }: IPropsTypes) => {
  // console.log("categories: ", categories);
  const fetchPageName = () => {
    return "Test";
  };
  return (
    <>
      <Head>
        <title> {fetchPageName()}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Tabs categories={categories.items} />
    </>
  );
};

export default Category;

export async function getStaticPaths() {
  return {
    paths: [{ params: { categoryId: "1" } }],
    fallback: true, // See the "fallback" section below
  };
}

export const getStaticProps: GetStaticProps = async () => {
  //Categories
  const { data: categories }: AxiosResponse<ICollectionResponse<ICategory[]>> =
    await fetchCategories();

  return {
    props: {
      categories: {
        items: categories.data,
        pagination: categories.meta.pagination,
      },
    },
  };
};
